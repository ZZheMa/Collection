方法总结：
1. 长短指针法
2. 去模拟结果，看看是否能达到和预期的一样。例如判断出栈顺序是否正确。
3. 将一个数据结构分为多段来实现效率，例如求中位数，把一组数分为两个堆。
4. 链表中巧用空的头结点，使得操作更加方便，不用考虑特殊情况。
5. 堆，也就是优先队列，快速找到最大值和最小值。灵活应用提高效率。例如求数组中第k大的值。
6. 保存每一个状态的值，使得时间复杂度为O(1)。例如min_stack。
7. 对于数列问题，或者说链表等，找一组数的规律，可以采用数形结合的思路，例如题16（最长摆动子序列），就利用数形结合将其抽象为求
极值点的问题。
8. 巧妙使用状态机，例如可以求极值点。有明显的状态转换问题，可以考虑用状态机。
9. 贪心算法更多的使找规律，不完全归纳法。也就是说先从一个开始找规律，使得第一个成为最优解，也就是局部最优解，
然后逐步向后扩散，也就是每步都是最优解，那么最终结果也就是最优解。
10. 贪心的算法就是找规律，从对简单的情况开始试探，这是找规律的最好方法。
11. 数形结合：18射击气球
12. 保存中间态，更方便分析问题：19跳跃游戏1
13. 巧用真值表来列举所有的情况，每一个比特位0和1代表该位的数是否存在。例如23求一组数的所有子集2。
14. 巧用数据结构set来去重，set的查找效率更高。例如24求不重复的所有子集
15. 计算组合数之前，可以先将给定数组排序，这样就能避免一个问题：两个子集里面的元素相同，但是顺序不一样，
例如 {1, 2, 1} 和 {1, 1, 2}，这两个子集里面的元素一样，但是顺序不一样。排序之后在计算组合数则不会出现这样的状况。
例如24求不重复的所有子集。
16. 二叉树递归遍历的变形，例如26生成所有正确括号。